name: Test pipelines

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ vars.GO_VERSION }}
    - name: Test
      run: make create_test_files && make tests
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ vars.GO_VERSION }}
    - name: Install golangci-lint
      run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin ${{ vars.GOLANGCI_LINT_VERSION }}
    - name: Lint
      run: make create_test_files && make lint
    - name: Clean
      run: make clean



  test_build_and_scan_image:
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ vars.GO_VERSION }}

      - name: Install dependencies
        run: go mod download

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          build-args: |
            GO_VERSION=${{ vars.GO_VERSION }}
          push: true
          tags: |
            localhost:5000/storm-control:${{ github.sha }}

      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b /usr/local/bin

      - name: Run Trivy image scan
        run: |
          trivy image --severity HIGH,CRITICAL localhost:5000/storm-control:${{ github.sha }}
